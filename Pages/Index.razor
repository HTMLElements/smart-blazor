@page "/"
@using Smart.Blazor;
@using Dashboard.Data;
@inject WeatherForecastService ForecastService

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<Grid OnReady="OnReady" Sorting="@sorting" Appearance="@appearance" Selection="@selection" Style="width: 80%; height: auto;">
    <Columns>
        <Column DataField="Date" Label="Date"></Column>
        <Column DataField="TemperatureC" Label="TemperatureC"></Column>
        <Column DataField="TemperatureF" Label="TemperatureF"></Column>
        <Column DataField="Summary" Label="Summary"></Column>
    </Columns>
    <Rows>
        @foreach (var forecast in forecasts)
        {
            <Row>
                <Cell Content="@forecast.Date.ToShortDateString()"></Cell>
                <Cell Content="@forecast.TemperatureC"></Cell>
                <Cell Content="@forecast.TemperatureF"></Cell>
                <Cell Content="@forecast.Summary"></Cell>
            </Row>
        }
    </Rows>
</Grid>

<br />
<br />

<Chart Style="width: 80%;" ShowLegend="@showLegend" Padding="@padding" ColorScheme="ChartColorScheme.Scheme29" OnReady="OnChartReady" SeriesGroups="@seriesGroups" XAxis="@xAxis" Caption="@caption" Description="@description" DataSource="@chartData"></Chart>
<br /><br />
      <Tabs>
          <TabItem Label="Tab 1">Content 1</TabItem>
          <TabItem Label="Tab 2">Content 2</TabItem>
      </Tabs>

@code {

    GridSorting sorting = new GridSorting() { Enabled = true };
    GridAppearance appearance = new GridAppearance() { AlternationCount = 2 };
    GridSelection selection = new GridSelection()
    {
        Enabled = true,
        CheckBoxes = new GridSelectionCheckBoxes()
        {
            Enabled = true
        }
    };

    private WeatherForecast[] forecasts;

    private void OnReady(Grid grid)
    {

    }

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }


    public class FitnessItem
    {
        public int George { get; set; }

        public int Erica { get; set; }

        public int Keith { get; set; }

        public string Day { get; set; }
    }

    string caption = "Fitness & exercise weekly scorecard";
    string description = "Time spent in vigorous exercise";
    bool showLegend = true;
    Padding padding = new Padding()
    {
        Left = 5,
        Top = 5,
        Right = 5,
        Bottom = 5
    };

    IEnumerable<object> chartData = new List<object>(){
       new FitnessItem() {
            Day = "Monday",
            Keith= 30,
            Erica = 15,
            George = 25
        },
        new FitnessItem() {
         Day= "Tuesday", Keith= 25, Erica= 25, George= 30
        },
        new FitnessItem() {
              Day= "Wednesday", Keith= 30, Erica= 20, George= 25
        },
        new FitnessItem() {
           Day= "Wednesday", Keith= 30, Erica= 20, George= 25
        },
        new FitnessItem() {
           Day= "Thursday", Keith= 35, Erica= 25, George= 45
        },
        new FitnessItem() {
         Day= "Friday", Keith= 20, Erica= 20, George= 25
        },
        new FitnessItem() {
          Day= "Saturday", Keith= 30, Erica= 20, George= 30
        },
        new FitnessItem() {
          Day= "Sunday", Keith= 60, Erica= 45, George= 90
        }
    };


    ChartXAxis xAxis = new ChartXAxis()
    {
        DataField = "Day"
    };

    List<ChartSeriesGroup> seriesGroups = new List<ChartSeriesGroup>(){
            new ChartSeriesGroup()
        {
            Type = ChartType.Column,
            ValueAxis = new ChartValueAxis()
            {
                UnitInterval = 10,
                MinValue = 0,
                MaxValue = 100,
                Description = "Time in Minutes"
            },
            Series = new List<ChartSeriesGroupSerie>()
            {
                    new ChartSeriesGroupSerie()
                    {
                        DataField = "Keith",
                        DisplayText = "Keith"
                    },
                    new ChartSeriesGroupSerie()
                    {
                        DataField = "Erica",
                        DisplayText = "Erica"
                    },
                    new ChartSeriesGroupSerie()
                    {
                        DataField = "George",
                        DisplayText = "George"
                    }
                }
            }
    };

    private void OnChartReady(Chart chart)
    {
        var seriesGroups = chart.SeriesGroups;
        var description = chart.Description;
        var xAxis = chart.XAxis;
    }
}

