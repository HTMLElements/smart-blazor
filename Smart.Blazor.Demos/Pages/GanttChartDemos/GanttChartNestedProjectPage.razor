@page "/ganttchart-nested-project"

@using Smart.Blazor.Demos.Data

<style>
    /* This is the CSS used in the demo */
    smart-gantt-chart {
        height: auto;
    }
</style>

<Example Name="GanttChart">
    <p>
        <b>Description:</b> Synchronized parent project with nested project that has sub-tasks. Drag/Resize it's sub-tasks to see how the root project is recalculated.
    </p>

    <GanttChart DataSource="Records" />
</Example>

@code {   
    public List<GanttDataRecord> Records;

    protected override void OnInitialized()
    {
        Records = new List<GanttDataRecord>()
        {
            new GanttDataRecord()
            {
                Label = "Project 1",
                Synchronized = true,
                Expanded = true,
                Type = "project",
                Tasks = new List<GanttDataRecord>()
                {
                    new GanttDataRecord()
                    {
                        Label = "Task 1.1",
                        MinDateStart = "2020-02-10",
                        MaxDateEnd = "2021-08-10",
                        DateStart = "2020-2-10",
                        DateEnd = "2021-4-10",
                        Type = "task"
                    },
                    new GanttDataRecord()
                    {
                        Label = "Task 1.2",
                        MinDateStart = "2020-3-10",
                        MaxDateEnd = "2021-11-10",
                        DateStart = "2020-3-10",
                        DateEnd = "2021-6-10",
                        Type = "task"
                    },
                    new GanttDataRecord()
                    {
                        Label = "Milestone 1",
                        DateEnd = "2021-3-15",
                        Type = "milestone"
                    },
                    new GanttDataRecord()
                    {
                        Label = "Project 2",
                        DateStart = "2020-4-10",
                        DateEnd = "2021-01-15",
                        Expanded = true,
                        Type = "project",
                        Tasks = new List<GanttDataRecord>()
                        {
                            new GanttDataRecord()
                            {
                                Label = "Task 2.1",
                                MinDateStart = "2020-2-10",
                                MaxDateEnd = "2021-08-10",
                                DateStart = "2020-4-10",
                                DateEnd = "2021-5-10",
                                Type = "task"
                            },
                            new GanttDataRecord()
                            {
                                Label = "Task 2.2",
                                MinDateStart = "2020-03-10",
                                MaxDateEnd = "2021-11-10",
                                DateStart = "2020-05-10",
                                DateEnd = "2021-6-10",
                                Type = "task"
                            },
                            new GanttDataRecord()
                            {
                                Label = "Milestone 2",
                                DateEnd = "2021-7-20",
                                Type = "milestone"
                            }
                        }
                    }
                }
            },
            new GanttDataRecord()
            {
                Type = "task",
                Label = "Task 3",
                DateStart = "2021-6-21",
                MinDateStart = "2021-06-05",
                MaxDateStart = "2021-07-05",
                DateEnd = "2021-12-10",
                MinDateEnd = "2021-12-01",
                MaxDateEnd = "2021-12-25"
            },
            new GanttDataRecord()
            {
                Type = "task",
                Label = "Task 4",
                DateStart = "2021-10-05",
                DateEnd = "2021-12-10",
                Progress = 50,
                MaxDuration = 24 * 24 * 60 * 60 * 1000 // 24 days in miliseconds
            }
        };
    }
}
