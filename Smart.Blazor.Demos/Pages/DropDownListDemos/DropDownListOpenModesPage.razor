@page "/dropdownlist-open-modes"

<style>
    /* This is the CSS used in the demo */
    html, body {
        min-height: 600px;
    }

    smart-drop-down-list {
        min-height: 35px;
        height: auto;
        width: 300px;
    }
</style>

<Example Name="DropDownList">
    <div id="description">
        <h3>Modes Description</h3>
        <p>Auto - the DropDownList is opened/closed when the element is hovered.</p>
        <p>Default - the DropDownList is opened/closed when the element is clicked.</p>
        <p>DropDownButton - the DropDownList is devided in two. An input field and a drop-down button.</p>
        <p>None - the dropDownList can't be opened/closed.</p>
    </div>

    <div id="container">
        <DropDownList Class="drop-down-list-modes-demo" DataSource="dataSource" DropDownOpenMode="@dropDownOpenMode" />
        <div class="options">
            <div class="caption">DropDownList Open Mode:</div>
            <div class="option">
                <Button Disabled="@defaultDisabled" OnClick="OnDefaultClick">Default</Button>
            </div>
            <div class="option">
                <Button Disabled="@autoDisabled" OnClick="OnAutoClick">Auto</Button>
            </div>
            <div class="option">
                <Button Disabled="@dropDownButtonDisabled" OnClick="OnDropDownButtonClick">DropDownButton</Button>
            </div>
            <div class="option">
                <Button Disabled="@noneDisabled" OnClick="OnNoneClick">None</Button>
            </div>
        </div>
    </div>
</Example>

@code {
    private bool defaultDisabled = true;
    private bool autoDisabled = false;
    private bool dropDownButtonDisabled = false;
    private bool noneDisabled = false;

    private DropDownOpenMode dropDownOpenMode = DropDownOpenMode.Default;

    private List<Dictionary<string, object>> dataSource = new List<Dictionary<string, object>>()
    {
        new Dictionary<string, object>()
        {
            { "label", "Andrew" }, { "value", 1 }, { "group", "A" }
        },
        new Dictionary<string, object>()
        {
            { "label", "Natalia" }, { "value", 5 }, { "group", "B" }
        },
        new Dictionary<string, object>()
        {
            { "label", "Michael" }, { "value", 4 }, { "group", "B" }
        },
        new Dictionary<string, object>()
        {
            { "label", "Angel" }, { "value", 2 }, { "group", "A" }
        },
        new Dictionary<string, object>()
        {
            { "label", "Hristo" }, { "value", 6 }, { "group", "C" }
        },
        new Dictionary<string, object>()
        {
            { "label", "Peter" }, { "value", 3 }, { "group", "A" }
        },
        new Dictionary<string, object>()
        {
            { "label", "Albert" }, { "value", 2 }, { "group", "A" }
        },
        new Dictionary<string, object>()
        {
            { "label", "Boyko" }, { "value", 8 }, { "group", "A" }
        },
        new Dictionary<string, object>()
        {
            { "label", "Dimitar" }, { "value", 2 }, { "group", "B" }
        },
        new Dictionary<string, object>()
        {
            { "label", "George" }, { "value", 10 }, { "group", "C" }
        }
    };

    private void OnDefaultClick()
    {
        dropDownOpenMode = DropDownOpenMode.Default;

        defaultDisabled = true;
        autoDisabled = false;
        dropDownButtonDisabled = false;
        noneDisabled = false;
    }

    private void OnAutoClick()
    {
        dropDownOpenMode = DropDownOpenMode.Auto;

        defaultDisabled = false;
        autoDisabled = true;
        dropDownButtonDisabled = false;
        noneDisabled = false;
    }

    private void OnDropDownButtonClick()
    {
        dropDownOpenMode = DropDownOpenMode.DropDownButton;

        defaultDisabled = false;
        autoDisabled = false;
        dropDownButtonDisabled = true;
        noneDisabled = false;
    }

    private void OnNoneClick()
    {
        dropDownOpenMode = DropDownOpenMode.None;

        defaultDisabled = false;
        autoDisabled = false;
        dropDownButtonDisabled = false;
        noneDisabled = true;
    }
}