@page "/grid-column-drag"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    body,
    html,
    app {
        height: 100%;
    }

    app {
        overflow: auto;
    }

    .content {
        height: calc(100% - 70px);
    }

    /* This is the CSS used in the demo */
    smart-grid {
        width: 60%;
    }

    #log {
        font-size: 12px;
    }

    .demo-description {
        width: 60%;
    }
</style>
<Example Name="Grid">
    <p>
        Drag a column from Grid A and drop it into Grid B. Dragging of 'Product' column is disabled. Column Reorder in
        Grid A is disabled. Column Reorder in Grid B is enabled.
    </p>

    @if (dataRecords == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <h3>Grid A</h3>
        <br /><br />
        <Grid DataSource="dataRecords" Behavior="behavior" OnColumnDragEnd="OnColumnDragEnd">
            <Columns>
                <Column DataField="FirstName" Label="First Name" Width="150"></Column>
                <Column DataField="LastName" Label="Last Name" Width="150"></Column>
                <Column DataField="Quantity" Label="Quantity" Width="100"></Column>
                <Column DataField="ProductName" Label="Product" AllowReorder="false"></Column>
                <Column DataField="Price" Label="UnitPrice" Width="100" DataType="number" CellsFormat="c2"></Column>
                <Column DataField="Total" Label="Total" DataType="number" CellsFormat="c2"></Column>
            </Columns>
        </Grid>
        <br /><br />
        <h3>Grid B</h3>
        <Grid DataSource="dataRecords1" Behavior="behavior">
            <Columns></Columns>
        </Grid>
    }
</Example>

@code {
    GridBehavior behavior = new GridBehavior() { AllowColumnReorder = true };

    private List<DataRecord> dataRecords;
    private List<DataRecord> dataRecords1;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dataRecords= dataService.GenerateData(20);
        dataRecords1 = dataService.GenerateData(20);
    }

    private void OnColumnDragEnd(Event eventObj)
    {
        GridColumnDragEndEventDetail detail = eventObj["Detail"];

        var Column = detail.Column;
        var PointerEvent = detail.OriginalEvent;
    }
}
