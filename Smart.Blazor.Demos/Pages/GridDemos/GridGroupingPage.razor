@page "/grid-grouping"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    body,
    html,
    app {
        height: 100%;
    }

    app {
        overflow: auto;
    }

    .content {
        height: calc(100% - 70px);
    }
    /* This is the CSS used in the demo */
    smart-grid {
        width: 100%;
    }
</style>

    <h1>Grid Grouping</h1>
    <p>The example demonstrates the grouping feature of the Grid Web Component. In order to apply grouping, the dataSource's 'groupBy' array should be set and the datagrid's 'grouping' property should be enabled.</p>

    @if (dataRecords == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <Grid @ref="grid" DataSourceSettings="dataSourceSettings" DataSource="dataRecords" Grouping="@grouping">
            <Columns>
                <Column DataField="Id" Label="#" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right" Width="200"></Column>
                <Column DataField="FirstName" Label="First Name"></Column>
                <Column DataField="LastName" Label="Last Name"></Column>
                <Column DataField="ProductName" Label="Product"></Column>
                <Column DataField="Quantity" Label="Quantity" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right"></Column>
                <Column DataField="Price" Label="Unit Price" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right" CellsFormat="c2"></Column>
                <Column DataField="Total" Label="Total" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right" CellsFormat="c2"></Column>
            </Columns>
        </Grid>
    }


@code {
    private Grid grid;

    GridDataSourceSettings dataSourceSettings = new GridDataSourceSettings()
    {
        GroupBy = new string[]
        {
            "ProductName"
        },
        DataFields = new List<GridDataSourceSettingsDataField>()
        {
             new GridDataSourceSettingsDataField()
             {
                Name = "Id",
                DataType = GridDataSourceSettingsDataFieldDataType.Number
             },
             new GridDataSourceSettingsDataField()
             {
                 Name = "Total",
                 DataType = GridDataSourceSettingsDataFieldDataType.Number
             },
             new GridDataSourceSettingsDataField()
             {
                 Name = "ProductName",
                 DataType = GridDataSourceSettingsDataFieldDataType.String
             },
             new GridDataSourceSettingsDataField()
             {
                 Name = "FirstName",
                 DataType = GridDataSourceSettingsDataFieldDataType.String
             },
             new GridDataSourceSettingsDataField()
             {
                 Name = "LastName",
                 DataType = GridDataSourceSettingsDataFieldDataType.String
             },
             new GridDataSourceSettingsDataField()
             {
                 Name = "Quantity",
                 DataType = GridDataSourceSettingsDataFieldDataType.Number
             },
             new GridDataSourceSettingsDataField()
             {
                 Name = "Price",
                 DataType = GridDataSourceSettingsDataFieldDataType.Number
             }
        }
    };

    GridGrouping grouping = new GridGrouping() { Enabled = true };

    private List<DataRecord> dataRecords;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dataRecords = dataService.GenerateData(100);
    }
}