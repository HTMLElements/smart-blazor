@page "/grid-column-panel"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    body,
    html,
    app {
        height: 100%;
    }

    app {
        overflow: auto;
    }

    .content {
        height: calc(100% - 70px);
    }

    /* This is the CSS used in the demo */
    smart-grid {
        width: 100%;
    }

    body {
        height: 1000px;
    }
</style>
<Example Name="Grid">
    <h1>Column Chooser Panel - DataGrid Columns UI</h1>
    <p>
        This example shows how to use the DataGrid Column panel. Click on the "Customize columns" button in the Grid
        header to open the column panel. The column chooser panel allows you to show/hide and reorder columns interactively.
    </p>

    @if (dataRecords == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <Grid DataSource="dataRecords" Sorting="@sorting" Filtering="@filtering" Header="@header">
            <Columns>
                <Column DataField="Id" Label="Id" AllowSort="false" AllowHide="false" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right"></Column>
                <Column DataField="FirstName" Label="First Name"></Column>
                <Column DataField="LastName" Label="Last Name"></Column>
                <Column DataField="ProductName" Label="Product"></Column>
                <Column DataField="TimeOfPurchase" Label="Purchase Date" DataType="date" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right" CellsFormat="d"></Column>
                <Column DataField="Quantity" Label="Quantity" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right"></Column>
                <Column DataField="Price" Label="Unit Price" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right" CellsFormat="c2"></Column>
                <Column DataField="Total" Label="Total" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right" CellsFormat="c2"></Column>
            </Columns>
        </Grid>
    }
</Example>

@code {
    GridSorting sorting = new GridSorting()
    {
        Enabled = true,
        Mode = GridSortingMode.Many
    };

    GridFiltering filtering = new GridFiltering() { Enabled = true };

    GridHeader header = new GridHeader()
    {
        Visible = true,
        Buttons = new string[] { "columns" }
    };

    private List<DataRecord> dataRecords;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dataRecords = dataService.GenerateData(1000);
    }
}
