@page "/grid-tree-grid-nested-data"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    body,
    html,
    app {
        height: 100%;
    }

    app {
        overflow: auto;
    }

    .content {
        height: calc(100% - 70px);
    }

    /* This is the CSS used in the demo */
    smart-grid {
        height: auto;
        width: 100%;
    }
</style>
<Example Name="Grid">
    <h1>TreeGrid with Nested Data Source</h1>
    <p>The TreeGrid in this demo is data-bound to a nested data source.</p>

    @if (dataRecords == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <Grid DataSource="dataRecords" DataSourceSettings="@dataSourceSettings"
              Behavior="@behavior" Sorting="@sorting" Filtering="@filtering">
            <Columns>
                <Column DataField="FirstName" Label="FirstName" Width="200"></Column>
                <Column DataField="LastName" Label="LastName" Width="200"></Column>
                <Column DataField="Title" Label="Title" Width="160"></Column>
                <Column DataField="BirthDate" Label="Birth Date" DataType="date" CellsFormat="d" Width="120"></Column>
                <Column DataField="HireDate" Label="Hire Date" DataType="date" CellsFormat="d" Width="120"></Column>
                <Column DataField="Address" Label="Address" Width="250"></Column>
                <Column DataField="City" Label="City" Width="120"></Column>
                <Column DataField="Country" Label="Country"></Column>
            </Columns>
        </Grid>
    }
</Example>

@code {
    GridDataSourceSettings dataSourceSettings = new GridDataSourceSettings()
    {
        ChildrenDataField = "items",
        Id = "EmployeeID"
    };

    GridBehavior behavior = new GridBehavior() { ColumnResizeMode = GridResizeMode.GrowAndShrink };
    GridSorting sorting = new GridSorting() { Enabled = true };
    GridFiltering filtering = new GridFiltering() { Enabled = true };

    private List<Dictionary<string, object>> dataRecords;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dataRecords = dataService.GenerateEmployeesNestedData();
    }
}
