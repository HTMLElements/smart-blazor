@page "/grid-datagrid-bind-to-csv"

<style>
        body,
        html,
        app {
            height: 100%;
        }

        app {
            overflow: auto;
        }

        .content {
            height: calc(100% - 70px);
        }

        /* This is the CSS used in the demo */
        @@media only screen and (max-width: 700px) {
            smart-grid {
                width: 100%;
            }
        }
</style>
<Example Name="Grid">
    <h1>DataGrid Data binding to CSV data</h1>
    <p>The DataGrid component in this demo, displays data records imported from a CSV file.</p>

    <Grid DataSource="@csvSource" DataSourceSettings="@dataSourceSettings"
          Appearance="@appearance" Selection="@selection" Filtering="@filtering" Sorting="@sorting">
        <Columns>
            <Column DataField="FirstName" Label="FirstName" Width="200"></Column>
            <Column DataField="LastName" Label="LastName" Width="200"></Column>
            <Column DataField="DepartmentName" Label="Department Name" Width="150"></Column>
            <Column DataField="Title" Label="Title" Width="300"></Column>
            <Column DataField="BirthDate" Label="Birth Date" DataType="date" CellsFormat="d" Width="120"></Column>
            <Column DataField="HireDate" Label="Hire Date" DataType="date" CellsFormat="d" Width="120"></Column>
            <Column DataField="Phone" Label="Phone" Width="120"></Column>
        </Columns>
    </Grid>
</Example>

@code {
    GridDataSourceSettings dataSourceSettings = new GridDataSourceSettings()
    {
        DataFields = new List<IGridDataSourceSettingsDataField>()
        {
            new GridDataSourceSettingsDataField() { Name = "EmployeeKey", DataType = GridDataSourceSettingsDataFieldDataType.Number },
            new GridDataSourceSettingsDataField() { Name = "ParentEmployeeKey", DataType = GridDataSourceSettingsDataFieldDataType.Number },
            new GridDataSourceSettingsDataField() { Name = "FirstName", DataType = GridDataSourceSettingsDataFieldDataType.String },
            new GridDataSourceSettingsDataField() { Name = "LastName", DataType = GridDataSourceSettingsDataFieldDataType.String },
            new GridDataSourceSettingsDataField() { Name = "Title", DataType = GridDataSourceSettingsDataFieldDataType.String },
            new GridDataSourceSettingsDataField() { Name = "HireDate", DataType = GridDataSourceSettingsDataFieldDataType.Date },
            new GridDataSourceSettingsDataField() { Name = "BirthDate", DataType = GridDataSourceSettingsDataFieldDataType.Date },
            new GridDataSourceSettingsDataField() { Name = "Phone", DataType = GridDataSourceSettingsDataFieldDataType.String },
            new GridDataSourceSettingsDataField() { Name = "Gender", DataType = GridDataSourceSettingsDataFieldDataType.String },
            new GridDataSourceSettingsDataField() { Name = "DepartmentName", DataType = GridDataSourceSettingsDataFieldDataType.String }
        },
        DataSourceType = GridDataSourceSettingsDataSourceType.Csv
    };

    string csvSource = "./data/employees.csv";

    GridAppearance appearance = new GridAppearance()
    {  
        AlternationStart = 0,
        AlternationCount = 2
    };

    GridSelection selection = new GridSelection()
    {
        Enabled = true,
        CheckBoxes = new GridSelectionCheckBoxes() { Enabled = true }
    };

    GridFiltering filtering = new GridFiltering() { Enabled = true };

    GridSorting sorting = new GridSorting() { Enabled = true };
}
