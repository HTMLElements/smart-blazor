@page "/grid-filtering-excel"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    body,
    html,
    app {
        height: 100%;
    }

    app {
        overflow: auto;
    }

    .content {
        height: calc(100% - 70px);
    }

    /* This is the CSS used in the demo */
    smart-grid {
        width: 100%;
    }    
</style>
<Example Name="Grid">
    <h1>Excel-like filtering UI</h1>
    <p>
        DataGrid excel-like filtering is enabled for all columns. The feature can be turned on/off by using the "filtering.filterMenu.mode = 'excel'" property. 
        You can also enable it per column by using the column's "filterMenuMode" property and set it to 'excel'.
        Users may click the filter icons to see a drop-down where they can apply filters.
    </p>

    @if (dataRecords == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <Grid DataSource="dataRecords" Appearance="@appearance" Sorting="@sorting" Filtering="@filtering">
            <Columns>
                <Column DataField="FirstName" Label="First Name"></Column>
                <Column DataField="LastName" Label="Last Name"></Column>
                <Column DataField="ProductName" Label="Product"></Column>
                <Column DataField="Quantity" Label="Quantity" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right"></Column>
                <Column DataField="TimeOfPurchase" Label="Purchase Date" DataType="date" CellsFormat="d" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right"></Column>
                <Column DataField="Price" Label="Unit Price" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right" CellsFormat="c2"></Column>
                <Column DataField="Total" Label="Total" DataType="number" Align="HorizontalAlignment.Right" CellsAlign="HorizontalAlignment.Right" CellsFormat="c2"></Column>
            </Columns>
        </Grid>
    }
</Example>

@code {

    GridAppearance appearance = new GridAppearance() { AutoShowColumnFilterButton = false };

    GridSorting sorting = new GridSorting()
    {
        Enabled = true,
        Mode = GridSortingMode.One
    };

    GridFiltering filtering = new GridFiltering()
    {
        Enabled = true,
        FilterMenu = new GridFilteringFilterMenu() { Mode = GridFilteringFilterMenuMode.Excel }
    };

    private List<DataRecord> dataRecords;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dataRecords = dataService.GenerateData(1000);
    }
}
