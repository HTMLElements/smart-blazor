@page "/kanban-swimlanes"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    /* This is the CSS used in the demo */


    html,
    body {
        margin: 0;
    }
</style>

    <h1>Kanban Swimlanes</h1>
    <p>
        The swimlanes in the Cards workflows separate different type of work activities and classes of service. You may have as many swimlanes as you want in order to organize your tasks
        The swimlanes are used to differentiate classes of work e.g: Defects; Features.
    </p>
    
    <Kanban DataSource="dataRecords" Columns="@columns" Users="@users" Collapsible Editable UserList Swimlanes="@swimlanes"/>    


@code {
    List<Dictionary<string, object>> dataRecords = new List<Dictionary<string, object>>()
    {
        new Dictionary<string, object>() { { "text", "Research of energy business" }, { "userId", 3 }, { "status", "Done" }, { "swimlane", "Client1"} },
        new Dictionary<string, object>() { { "text", "Create Gannt chart" }, { "userId", 2 }, { "status", "InProgress" }, { "swimlane", "Client1"} },
        new Dictionary<string, object>() { { "text", "Develop prototype" }, { "userId", 4 }, { "status", "Testing" }, { "swimlane", "Client1"} },
        new Dictionary<string, object>() { { "text", "Data extrapolation" }, { "userId", 3 }, { "status", "InProgress" }, { "swimlane", "Client1"} },
        new Dictionary<string, object>() { { "text", "Prepare requirements" }, { "userId", 1 }, { "status", "Done" }, { "swimlane", "Client2"} },
        new Dictionary<string, object>() { { "text", "Try out new simulation" }, { "userId", 1 }, { "status", "Testing" }, { "swimlane", "Client2"} },
        new Dictionary<string, object>() { { "text", "Create blueprints for new product" }, { "userId", 1 }, { "status", "ToDo" }, { "swimlane", "Other"} },
        new Dictionary<string, object>() { { "text", "Calculate hours necessary for \"EMV\" project" }, { "userId", 2 }, { "status", "ToDo" }, { "swimlane", "Other"} },
        new Dictionary<string, object>() { { "text", "Distribute final product" }, { "userId", 4 }, { "status", "Done" }, { "swimlane", "Client1"} }
    };

    List<KanbanColumn> columns = new List<KanbanColumn>()
    {
        new KanbanColumn()
        {
            DataField = "ToDo",
            Label = "To do"
        },
        new KanbanColumn()
        {
            DataField = "InProgress",
            Label = "In progress"
        },
        new KanbanColumn()
        {
            DataField = "Testing",
            Label = "Testing"
        },
        new KanbanColumn()
        {
            DataField = "Done",
            Label = "Done"
        }
    };

    List<KanbanUser> users = new List<KanbanUser>()
    {
        new KanbanUser()
        {
            Id = 0,
            Name = "Andrew",
            Image = "https://www.htmlelements.com/demos/images/people/andrew.png"
        },
        new KanbanUser()
        {
            Id = 1,
            Name = "Anne",
            Image = "https://www.htmlelements.com/demos/images/people/anne.png"
        },
        new KanbanUser()
        {
            Id = 2,
            Name = "Janet",
            Image = "https://www.htmlelements.com/demos/images/people/janet.png"
        },
        new KanbanUser()
        {
            Id = 3,
            Name = "John",
            Image = "https://www.htmlelements.com/demos/images/people/john.png"
        },
        new KanbanUser()
        {
            Id = 4,
            Name = "Laura",
            Image = "https://www.htmlelements.com/demos/images/people/laura.png"
        }
    };

    List<KanbanSwimlane> swimlanes = new List<KanbanSwimlane>()
    {
        new KanbanSwimlane()
        {
            Label = "Client \"Energo\"",
            DataField = "Client1"
        },
        new KanbanSwimlane()
        {
            Label = "Client \"Sim-Prod Ltd.\"",
            DataField = "Client2",
            Color = "#C90086"
        },
        new KanbanSwimlane()
        {
            Label = "Other clients",
            DataField = "Other",
            Color = "#03C7C0"
        }
    };
}