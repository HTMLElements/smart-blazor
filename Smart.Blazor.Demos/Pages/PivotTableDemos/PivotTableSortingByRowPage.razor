@page "/pivottable-sorting-by-row"

@using Smart.Blazor.Demos.Data;
@inject RandomDataService RandomDataService

<Example Name="PivotTable">
    <style>
        body,
        html,
        app {
            width: 100%;
            height: 100%;
        }

        .smart-pivot-table {
            width: 1050px;
            max-height: 800px;
            margin-bottom: 10px;
        }
    </style>

    <p>
        This demo shows the sorting by row functionality of Smart.PivotTable. Click on a cell
        from the Group column to sort by its respective row.
    </p>

    <PivotTable DataSource="Data" DrillDown FreezeHeader @bind-HideCellSelectionTooltip="hideCellSelectionTooltip" 
                @bind-GroupLayout="groupLayout" GrandTotal KeyboardNavigation Selection
                SelectionMode="PivotTableSelectionMode.Cell" Toolbar Columns="@columns" />

    <div class="options">
        <div class="option">
            <ToggleButton Id="toggleButton" OnChange="OnChange">
                Change <strong>groupLayout</strong> to '<span id="toggleButtonLabel">@toggleLabel</span>'
            </ToggleButton>
        </div>
    </div>
</Example>

@code {     
    string toggleLabel = "classic";
    PivotTableGroupLayout groupLayout = PivotTableGroupLayout.Default;

    bool hideCellSelectionTooltip = false;

    List<PivotTableColumn> columns = new List<PivotTableColumn>()
    {
        new PivotTableColumn()
        {
            Label = "Continent",
            DataField = "Continent",
            DataType = PivotTableColumnDataType.String,
            AllowRowGroup = true,
            RowGroup = true
        },
        new PivotTableColumn()
        {
            Label = "City",
            DataField = "City",
            DataType = PivotTableColumnDataType.String,
            AllowRowGroup = true,
            RowGroup = true
        },
        new PivotTableColumn()
        {
            Label = "Year",
            DataField = "Year",
            DataType = PivotTableColumnDataType.Number,
            AllowPivot = true,
            Pivot = true
        },
        new PivotTableColumn()
        {
            Label = "Quarter",
            DataField = "Quarter",
            DataType = PivotTableColumnDataType.String,
            AllowPivot = true,
            Pivot = true
        },
        new PivotTableColumn()
        {
            Label = "Revenue",
            DataField = "Revenue",
            DataType = PivotTableColumnDataType.Number,
            Summary = PivotTableColumnSummary.Sum,
            SummarySettings = new
            {
                prefix = "$",
                negativesInBrackets = true
            }
        },
        new PivotTableColumn()
        {
            Label = "Expenses",
            DataField = "Expense",
            DataType = PivotTableColumnDataType.Number,
            Summary = PivotTableColumnSummary.Sum,
            SummarySettings = new
            {
                prefix = "$",
                negativesInBrackets = true
            }
        }
    };

    public List<PivotRecord> Data;

    protected override void OnInitialized()
    {
        Data = RandomDataService.GeneratePivotData(300, 1);
    }

    private void OnReady(PivotTable pivotTable)
    {
        pivotTable.ExpandRow(0);
    }

    private void OnChange(Event eventObj)
    {
        ToggleButtonChangeEventDetail args = eventObj["Detail"];

        if (args.Value)
        {
            groupLayout = PivotTableGroupLayout.Classic;
            toggleLabel = "default";
        }
        else
        {
            groupLayout = PivotTableGroupLayout.Default;
            toggleLabel = "classic";
        }
    }
}
