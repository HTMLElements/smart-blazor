@page "/scheduler-header-navigation-style"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    /* This is the CSS used in the demo */
    html,
    body {
        width: 100%; 
        height: 100%;
        margin: 0 auto;
    }

    smart-scheduler {
        width: calc(100% - 300px);
        height: 800px;
        --smart-scheduler-timeline-cell-height: 50px;
    }
    
    @@media (max-width: 750px) {
        .smart-scheduler {
            width: 100%;
        }
    }    
</style>

<Example Name="Scheduler">
    @if (dataRecords == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <Scheduler DataSource="dataRecords" View="SchedulerViewType.Day" HourStart="9" HourEnd="18" FirstDayOfWeek="1" 
                   HeaderNavigationStyle="@headerNavigationStyle" HideTodayButton="@hideTodayButton" HideViewMenuCheckableItems="@hideViewMenuCheckableItems" 
                   DisableDateMenu="@disableDateMenu" DisableViewMenu="@disableViewMenu" DisableContextMenu="@disableContextMenu" DisableEventMenu="@disableEventMenu"
                   DisableWindowEditor="@disableWindowEditor" DisableDrag="@disableDrag" DisableDrop="@disableDrop" DisableResize="@disableResize" />

        <div class="options">
            <div class="description">
                <h4>Description</h4>
                <p>
                    <b>headerNavigationStyle</b> determines the layout style of the header controls.
                </p>
                <p>Choose a style:</p>
            </div>
            <div class="option">
                <RadioButton Checked OnCheckValue="OnFlatChecked">Flat</RadioButton>
                <RadioButton OnCheckValue="OnRaisedChecked">Raised</RadioButton>
            </div>
            <div class="option">
                <h4>Additional settings:</h4>
                <CheckBox OnChange="OnHideTodayButtonChange">Hide Today Button</CheckBox>
                <CheckBox OnChange="OnHideViewMenuCheckableItems">Hide View Menu Checkable Item</CheckBox>
                <CheckBox OnChange="OnDisableDateMenu">Disable Date Menu</CheckBox>
                <CheckBox OnChange="OnDisableViewMenu">Disable View Menu</CheckBox>
                <CheckBox OnChange="OnDisableContextMenu">Disable Context Menu</CheckBox>
                <CheckBox OnChange="OnDisableEventMenu">Disable Event Menu</CheckBox>
                <CheckBox OnChange="OnDisableWindowEditor">Disable Window Editor</CheckBox>
                <CheckBox OnChange="OnDisableDrag">Disable Event Drag</CheckBox>
                <CheckBox OnChange="OnDisableDrop">Disable Event Drop</CheckBox>
                <CheckBox OnChange="OnDisableResize">Disable Event Resize</CheckBox>
            </div>
        </div>
    }
</Example>

@code {
    private List<SchedulerDataSource> dataRecords;

    SchedulerHeaderNavigationStyle headerNavigationStyle = SchedulerHeaderNavigationStyle.Flat;
    bool hideTodayButton = false;
    bool hideViewMenuCheckableItems = false;
    bool disableDateMenu = false;
    bool disableViewMenu = false;
    bool disableContextMenu = false;
    bool disableEventMenu = false;
    bool disableWindowEditor = false;
    bool disableDrag = false;
    bool disableDrop = false;
    bool disableResize = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dataRecords = GetData();
    }

    private List<SchedulerDataSource> GetData()
    {
        DateTime today = DateTime.Today;

        List<SchedulerDataSource> data = new List<SchedulerDataSource>()
        {
            new SchedulerDataSource() {
                Label = "Website Re-Design Plan",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 9, 30, 0).AddDays(-2),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 11, 30, 0).AddDays(-2),
                BackgroundColor = "#689F38"
            },
            new SchedulerDataSource() {
                Label = "Book Flights to San Fran for Sales Trip",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 10, 0, 0).AddDays(-1),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 12, 0, 0).AddDays(-1),
                BackgroundColor = "#7986CB"
            },
            new SchedulerDataSource() {
                Label = "Install New Router in Conference Room",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 12, 0, 0).AddDays(-2),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 14, 30, 0).AddDays(-2),
                BackgroundColor = "#8D6E63"
            },
            new SchedulerDataSource() {
                Label = "Add a new desk to the Dev Room",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 12, 30, 0).AddDays(-1),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 14, 45, 0).AddDays(-1),
                BackgroundColor = "#00C853"
            },
            new SchedulerDataSource() {
                Label = "Install New Router in Dev Room",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 13, 0, 0),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 15, 30, 0),
                BackgroundColor = "#2196F3"
            },
            new SchedulerDataSource() {
                Label = "Approve Personal Computer Upgrade Plan",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 10, 0, 0).AddDays(1),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 11, 0, 0).AddDays(1),
                BackgroundColor = "#689F38"
            },
            new SchedulerDataSource() {
                Label = "Final Budget Review",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 12, 0, 0).AddDays(1),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 13, 35, 0).AddDays(1),
                BackgroundColor = "#FDD835"
            },
            new SchedulerDataSource() {
                Label = "Old Brochures",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 13, 0, 0),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 15, 15, 0).AddDays(1),
                BackgroundColor = "#FF8A65"
            },
            new SchedulerDataSource() {
                Label = "New Brochures",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 13, 0, 0).AddDays(1),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 15, 15, 0).AddDays(2),
                BackgroundColor = "#0D47A1"
            },
            new SchedulerDataSource() {
                Label = "Install New Database",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 9, 0, 0).AddDays(1),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 12, 15, 0).AddDays(1),
                BackgroundColor = "#004D40"
            },
            new SchedulerDataSource() {
                Label = "Approve New Online Marketing Strategy",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 12, 0, 0).AddDays(2),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 14, 0, 0).AddDays(2),
                BackgroundColor = "#FF3D00"
            },
            new SchedulerDataSource() {
                Label = "Upgrade Personal Computers",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 9, 0, 0),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 11, 30, 0),
                BackgroundColor = "#689F38"
            },
            new SchedulerDataSource() {
                Label = "Prepare current Year Marketing Plan",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 11, 0, 0).AddDays(3),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 13, 30, 0).AddDays(3),
                BackgroundColor = "#2196F3"
            },
            new SchedulerDataSource() {
                Label = "Prepare current Year Marketing Plan",
                DateStart = new DateTime(today.Year, today.Month, today.Day, 11, 0, 0).AddDays(4),
                DateEnd = new DateTime(today.Year, today.Month, today.Day, 13, 30, 0).AddDays(4),
                BackgroundColor = "#CE93D8"
            }
        };

        return data;
    }

    private void OnFlatChecked()
    {
        headerNavigationStyle = SchedulerHeaderNavigationStyle.Flat;
    }

    private void OnRaisedChecked()
    {
        headerNavigationStyle = SchedulerHeaderNavigationStyle.Raised;
    }

    private void OnHideTodayButtonChange(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        hideTodayButton = args.Value;
    }

    private void OnHideViewMenuCheckableItems(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        hideViewMenuCheckableItems = args.Value;
    }

    private void OnDisableDateMenu(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        disableDateMenu = args.Value;
    }

    private void OnDisableViewMenu(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        disableViewMenu = args.Value;
    }

    private void OnDisableContextMenu(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        disableContextMenu = args.Value;
    }

    private void OnDisableEventMenu(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        disableEventMenu = args.Value;
    }

    private void OnDisableWindowEditor(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        disableWindowEditor = args.Value;
    }

    private void OnDisableDrag(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        disableDrag = args.Value;
    }

    private void OnDisableDrop(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        disableDrop = args.Value;
    }

    private void OnDisableResize(Event eventObj)
    {
        CheckBoxChangeEventDetail args = eventObj["Detail"];

        disableResize = args.Value;
    }
}