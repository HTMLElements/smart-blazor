@page "/table-sticky-columns"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    body,
    html,
    app {
        height: 100%;
    }

    app {
        overflow: auto;
    }

    .content {
        height: calc(100% - 70px);
    }

    /* This is the CSS used in the demo */
    .smart-table {
        width: 650px;
    }

    .material-icons {
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>
<Example Name="Table">
    <p>
        This demo showcases how to set up sticky columns in smart-table.
    </p>

    <Table DataSource="chemicalElementsData" Columns="@columns"></Table>    
</Example>

@code {
    private List<Dictionary<string, object>> chemicalElementsData = new List<Dictionary<string, object>>()
    {
        new Dictionary<string, object>()
        {
            { "number", 1 }, { "name", "Hydrogen" }, { "symbol", "H" }, { "weight", 1.008 }, { "abundance", 1400 }, { "originOfName", "Greek elements hydro- and -gen, 'water-forming'" }
        },
        new Dictionary<string, object>()
        {
            { "number", 2 }, { "name", "Helium" }, { "symbol", "He" }, { "weight", 4.002602 }, { "abundance", 0.008 }, { "originOfName", "Greek hḗlios, 'sun'" }
        },
        new Dictionary<string, object>()
        {
            { "number", 3 }, { "name", "Lithium" }, { "symbol", "Li" }, { "weight", 6.94 }, { "abundance", 20 }, { "originOfName", "Greek líthos, 'stone'" }
        },
        new Dictionary<string, object>()
        {
            { "number", 4 }, { "name", "Beryllium" }, { "symbol", "Be" }, { "weight", 9.0121831 }, { "abundance", 2.8 }, { "originOfName", "Beryl, a mineral (ultimately from the name of Belur in southern India)" }
        },
        new Dictionary<string, object>()
        {
            { "number", 5 }, { "name", "Boron" }, { "symbol", "B" }, { "weight", 10.81}, { "abundance", 10 }, { "originOfName", "Borax, a mineral (from Arabic bawraq)" }
        },
        new Dictionary<string, object>()
        {
            { "number", 6 }, { "name", "Carbon" }, { "symbol", "C" }, { "weight", 12.011 }, { "abundance", 200 }, { "originOfName", "Latin carbo, 'coal'" }
        },
        new Dictionary<string, object>()
        {
            { "number", 7 }, { "name", "Nitrogen" }, { "symbol", "N" }, { "weight", 14.007 }, { "abundance", 19 }, { "originOfName", "Greek nítron and -gen, 'niter-forming'" }
        },
        new Dictionary<string, object>()
        {
            { "number", 8 }, { "name", "Oxygen" }, { "symbol", "O" }, { "weight", 15.999 }, { "abundance", 461000 }, { "originOfName", "Greek oxy- and -gen, 'acid-forming'" }
        },
        new Dictionary<string, object>()
        {
            { "number", 9 }, { "name", "Fluorine" }, { "symbol", "F" }, { "weight", 18.998403163 }, { "abundance", 585 }, { "originOfName", "Latin fluere, 'to flow'" }
        },
        new Dictionary<string, object>()
        {
            { "number", 10 }, { "name", "Neon" }, { "symbol", "Ne" }, { "weight", 20.1797 }, { "abundance", 0.005 }, { "originOfName", "Greek néon, 'new'" }
        }
    };

    List<TableColumn> columns = new List<TableColumn>()
    {
        new TableColumn()
        {
            DataField = "number",
            Label = "No.",
            DataType = TableColumnDataType.Number,
            Width = 50,
            Freeze = "true"
        },
        new TableColumn()
        {
            DataField = "name",
            Label = "Name",
            DataType = TableColumnDataType.String,
            Width = 200,
            Freeze = "near"
        },
        new TableColumn()
        {
            DataField = "symbol",
            Label = "Symbol",
            DataType = TableColumnDataType.String,
            Width = 150
        },
        new TableColumn()
        {
            DataField = "weight",
            Label = "Weight",
            DataType = TableColumnDataType.Number,
            Width = 200
        },
        new TableColumn()
        {
            DataField = "originOfName",
            Label = "Origin",
            DataType = TableColumnDataType.String,
            Width = 200
        },
         new TableColumn()
        {
            DataField = "abundance",
            Label = "Abundance",
            DataType = TableColumnDataType.Number,
            Width = 100,
            Freeze = "far"
        }
    };
}
