@page "/table-sticky-footer"

@using Smart.Blazor.Demos.Data
@inject RandomDataService dataService

<style>
    body,
    html,
    app {
        height: 100%;
    }

    app {
        overflow: auto;
    }

    .content {
        height: calc(100% - 70px);
    }

    /* This is the CSS used in the demo */
    .smart-table {
        width: 800px;
        height: 600px;
    }

        .smart-table[freeze-footer] tfoot td {
            background-color: var(--smart-primary);
            color: var(--smart-primary-color);
        }

    #totalLabel {
        text-align: right;
    }
</style>
<Example Name="Table">
    <p>
        This demo shows how to enable sticky footer in smart-table.
    </p>

    @if (dataRecords == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <Table DataSource="dataRecords" FooterRow="@templateId" FreezeFooter="true" Columns="@columns"></Table>

        <template id="customFooterRow">
            <tr>
                <td id="totalLabel" colspan="5">Custom Footer</td>
            </tr>
        </template>
    }
</Example>

@code {
    private string templateId = "customFooterRow";

    private List<DataRecord> dataRecords;

    List<TableColumn> columns = new List<TableColumn>()
    {
        new TableColumn()
        {
            DataField = "Id",
            Label = "Id",
            DataType = TableColumnDataType.Number
        },
        new TableColumn()
        {
            DataField = "FirstName",
            Label = "First Name",
            DataType = TableColumnDataType.String
        },
        new TableColumn()
        {
            DataField = "LastName",
            Label = "Last Name",
            DataType = TableColumnDataType.String
        },
        new TableColumn()
        {
            DataField = "ProductName",
            Label = "Product Name",
            DataType = TableColumnDataType.String
        },
        new TableColumn()
        {
            DataField = "Quantity",
            Label = "Quantity",
            DataType = TableColumnDataType.Number
        }
    };

    protected override void OnInitialized()
    {
        base.OnInitialized();
        dataRecords = dataService.GenerateData(50);
    }
}
