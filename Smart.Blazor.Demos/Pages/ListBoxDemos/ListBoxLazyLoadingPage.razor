@page "/listbox-lazy-loading"

<style>
    /* This is the CSS used in the demo */
    smart-list-box {
        width: 300px;
        height: 500px;
    }

    @@media only screen and (max-width: 700px) {
        body, html {
            width: 100%;
            height: 100%;
            padding: 0px;
            margin: 0px;
            overflow: hidden;
        }

        smart-list-box {
            width: 100%;
            height: 100%;
        }
    }
</style>

<Example Name="ListBox">
    <i>Hint: Scroll to the bottom to lazy load items.</i>

    <ListBox @ref="listBox" DataSource="@dataSource" DisplayLoadingIndicator="@displayLoadingIndicator" OnScrollBottomReached="OnScrollBottomReached" />
</Example>

@code {
    ListBox listBox;
    bool displayLoadingIndicator = false;

    private static List<string> dataSource = new List<string>()
    {
        "Affogato",
        "Americano",
        "Bicerin",
        "Breve",
        "Café Bombón",
        "Café au lait",
        "Caffé Corretto",
        "Café Crema",
        "Caffé Latte",
        "Caffé macchiato",
        "Café mélange",
        "Coffee milk",
        "Cafe mocha",
        "Cappuccino",
        "Carajillo",
        "Cortado",
        "Cuban espresso",
        "Espresso",
        "Eiskaffee",
        "The Flat White",
        "Frappuccino",
        "Galao",
        "Greek frappé coffee",
        "Alabala",
        "Indian filter coffee",
        "Instant coffee",
        "Irish coffee",
        "Liqueur coffee"
    };

    int itemsCount = dataSource.Count();

    private async void OnScrollBottomReached()
    {
        displayLoadingIndicator = true;

        await Task.Delay(1000);

        int index = itemsCount;
        List<string> items = new List<string>();

        for (int i = 0; i < 10; i++)
        {
            items.Add("Item " + (index + i));
        }

        listBox.Insert(index, items);
        itemsCount += 10;

        displayLoadingIndicator = false;
        // listBox.DisplayLoadingIndicator = false; // works
    }
}