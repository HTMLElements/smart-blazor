@namespace Smart.Blazor
<div>

  <h2 id="TextBoxProperties"><a id="TextBox_properties" href="javascript: void(0)" class="anchor"><strong>TextBox</strong> Properties</a></h2>
  <table class="table">
      <tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr>
      <tr><td>Animation</td><td>Animation</td><td>Animation.Advanced</td><td>Sets or gets the animation mode. Animation is disabled when the property is set to <strong>'none'</strong></td></tr>
      <tr><td>AutoFocus</td><td>bool</td><td>false</td><td>Determines whether the text box will be focused on page load or not.</td></tr>
      <tr><td>AutoComplete</td><td>AutoComplete</td><td>AutoComplete.Manual</td><td>Determines the autocomplete mode. Auto complete modes filter the items from the dataSource and show only those that match the input.</td></tr>
      <tr><td>AutoCompleteDelay</td><td>int</td><td>100</td><td>Determines the delay before the drop down opens to show the matches from the auto complete operation.</td></tr>
      <tr><td>DataSource</td><td>object</td><td>N/A</td><td>Determines the data source that will be loaded to the ComboBox. The dataSource can be an array of strings, numbers or objects where the attributes represent the properties of a List Item. For example <strong>label</strong>, <strong>value</strong>. It can also be a callback that returns an Array of items as previously described.</td></tr>
      <tr><td>Disabled</td><td>bool</td><td>false</td><td>Enables or disables the element.</td></tr>
      <tr><td>DisplayLoadingIndicator</td><td>bool</td><td>false</td><td>Determines whether an indicator will appear during filtering and remote item loading.</td></tr>
      <tr><td>DisplayMember</td><td>string</td><td>&quot;&quot;</td><td>Sets or gets the displayMember. The displayMember specifies the name of a property to display. The name is contained in the collection specified by the 'dataSource' property.</td></tr>
      <tr><td>DisplayMode</td><td>TextBoxDisplayMode</td><td>TextBoxDisplayMode.Default</td><td>Determines how the characters are displayed inside the input.</td></tr>
      <tr><td>DropDownAppendTo</td><td>object</td><td>N/A</td><td>Determines the drop down parent. The drop down can be removed from the body of the element and continue to work in another container. This is usefull when one of the parents of the element doesn't allow overflowing, by settings this property to 'body' the drop down will be appended to the DOM and the drop down will open/close as usual. <strong>dropDownAppendTo</strong> can be a string representing the id of an HTML element on the page or a direct reference to that element. Reseting it back to null will take the drop down back to it's original place.</td></tr>
      <tr><td>DropDownHeight</td><td>object</td><td></td><td>Sets the height of the drop down. By default it's set to an empty string. In this case the height of the drop down is controlled by a CSS variable.</td></tr>
      <tr><td>DropDownMaxHeight</td><td>object</td><td></td><td>Sets the maximum Height of the drop down. By default it's set to an empty string. In this case the maxHeight of the drop down is controlled by a CSS variable.</td></tr>
      <tr><td>DropDownMaxWidth</td><td>object</td><td></td><td>Sets the maximum Width of the drop down. By default it's set to an empty string. In this case the maxWidth of the drop down is controlled by a CSS variable.</td></tr>
      <tr><td>DropDownMinHeight</td><td>object</td><td></td><td>Sets the minimum Height of the drop down. By default it's set to an empty string. In this case the minHeight of the drop down is controlled by a CSS variable.</td></tr>
      <tr><td>DropDownMinWidth</td><td>object</td><td></td><td>Sets the minimum Width of the drop down. By default it's set to an empty string. In this case the minWidth of the drop down is controlled by a CSS variable.</td></tr>
      <tr><td>DropDownOpenMode</td><td>DropDownOpenMode</td><td>DropDownOpenMode.Default</td><td>Determines how the drop down is going to open.</td></tr>
      <tr><td>DropDownOverlay</td><td>bool</td><td>false</td><td>If this property is enabled, when the element's dropdown is opened, a transparent overlay is positioned between the dropdown and the rest of the document. The purpose of the overlay is to make sure that clicking anywhere outside the drop down will will target the overlay and not the DOM.</td></tr>
      <tr><td>DropDownPlaceholder</td><td>string</td><td>&quot;No Items&quot;</td><td>Determines the placeholder for the drop down, displayed when there are no items in it.</td></tr>
      <tr><td>DropDownPosition</td><td>DropDownPosition</td><td>DropDownPosition.Auto</td><td>Determines the position of the drop down when opened.</td></tr>
      <tr><td>DropDownWidth</td><td>object</td><td></td><td>Sets the width of the drop down. By default it's set to an empty string. In this case the width of the drop down is controlled by a CSS variable.</td></tr>
      <tr><td>EscKeyMode</td><td>EscKeyMode</td><td>EscKeyMode.None</td><td>Determines the behavior of the element when Escape key is pressed.</td></tr>
      <tr><td>EnterKeyBehavior</td><td>EnterKeyBehavior</td><td>EnterKeyBehavior.Submit</td><td>Specifies the behavior of "Enter" key.</td></tr>
      <tr><td>Form</td><td>string</td><td>&quot;&quot;</td><td>The form element that the element is associated with (its "form owner"). The value of the attribute must be the ID of a form element in the same document.</td></tr>
      <tr><td>Hint</td><td>object</td><td>N/A</td><td>Sets additional helper text below the element. The hint is visible only when the element is focused.</td></tr>
      <tr><td>HorizontalScrollBarVisibility</td><td>HorizontalScrollBarVisibility</td><td>HorizontalScrollBarVisibility.Auto</td><td>Determines the visibility of the horizontal Scroll bar thats inside the drop down.</td></tr>
      <tr><td>InputMember</td><td>string</td><td>&quot;&quot;</td><td>Represents the property name of a List item. Determines the value of the input when a ListItem is selected. Usefull in cases where the user wants to display for example the value of an item instead of it's label. By default the label is displayed in the input.</td></tr>
      <tr><td>InputPurpose</td><td>string</td><td>&quot;off&quot;</td><td>Sets the purpose of the input and what, if any, permission the user agent has to provide automated assistance in filling out the element's input when in a form, as well as guidance to the browser as to the type of information expected in the element. This value corresponds to the standard HTML <strong>autocomplete</strong> attribute and can be set to values such as <em>'on'</em>, <em>'name'</em>, <em>'organization'</em>, <em>'street-address'</em>, etc.</td></tr>
      <tr><td>ItemHeight</td><td>int</td><td>N/A</td><td>Sets the height for all list items. <strong>Used only when virtualization is enabled.</strong></td></tr>
      <tr><td>ItemMeasureMode</td><td>ListItemMeasureMode</td><td>ListItemMeasureMode.Auto</td><td>Determines the item width measuring algorithm.</td></tr>
      <tr><td>Items</td><td>object</td><td></td><td>A getter that returns an array of all List items inside the drop down.</td></tr>
      <tr><td>ItemTemplate</td><td>object</td><td>N/A</td><td>The itemTemplate property is a string that represents the id of an HTMLTemplateElement in the DOM.  It's used to set a customize the content of the list items.</td></tr>
      <tr><td>Label</td><td>string</td><td>&quot;&quot;</td><td>Sets a little text label above the element.</td></tr>
      <tr><td>LoadingIndicatorPlaceholder</td><td>string</td><td>&quot;Loading...&quot;</td><td>Determines the text that will be displayed next to the loading indicator when the loader is visible and it's position is top or bottom.</td></tr>
      <tr><td>LoadingIndicatorPosition</td><td>VerticalAlignment</td><td>VerticalAlignment.Center</td><td>Determines the position of the loading indicator.</td></tr>
      <tr><td>Locale</td><td>string</td><td>&quot;en&quot;</td><td>Sets or gets the language. Used in conjunction with the property <strong>messages</strong>. </td></tr>
      <tr><td>LocalizeFormatFunction</td><td>object</td><td>N/A</td><td>Callback used to customize the format of the messages that are returned from the Localization Module.</td></tr>
      <tr><td>MaxLength</td><td>int</td><td>N/A</td><td>Sets or gets the maximum number of characters that the user can enter.</td></tr>
      <tr><td>MinLength</td><td>int</td><td>2</td><td>Sets or gets the minimum number of characters that the user have to enter to trigger the auto complete functionality.</td></tr>
      <tr><td>Messages</td><td>object</td><td>N/A</td><td>Sets or gets an object specifying strings used in the widget that can be localized. Used in conjunction with the property <strong>language</strong>. </td></tr>
      <tr><td>Name</td><td>string</td><td>&quot;&quot;</td><td>Sets or gets the name attribute for the element. Name is used when submiting HTML forms.</td></tr>
      <tr><td>IsOpened</td><td>bool</td><td>false</td><td>Determines whether the drop down is opened or closed</td></tr>
      <tr><td>Placeholder</td><td>string</td><td>&quot;&quot;</td><td>Determines the input's placeholder.</td></tr>
      <tr><td>Readonly</td><td>bool</td><td>false</td><td>Disables user interaction with the element.</td></tr>
      <tr><td>RightToLeft</td><td>bool</td><td>false</td><td>Sets or gets the value indicating whether the element is aligned to support locales using right-to-left fonts.</td></tr>
      <tr><td>Required</td><td>bool</td><td>false</td><td>Specifies that the user must fill the input before submitting a form with the element.</td></tr>
      <tr><td>RequiredMessage</td><td>string</td><td>&quot;&quot;</td><td>Specifies the message that will appear if <b>required</b> is set and no value is provided in the input.</td></tr>
      <tr><td>SelectAllOnFocus</td><td>bool</td><td>false</td><td>Determines whether the content of the input will be selected on focus or not.</td></tr>
      <tr><td>Theme</td><td>string</td><td>&quot;&quot;</td><td>Determines the theme. Theme defines the look of the element</td></tr>
      <tr><td>Unfocusable</td><td>bool</td><td>false</td><td>If is set to true, the element cannot be focused.</td></tr>
      <tr><td>Value</td><td>string</td><td>&quot;&quot;</td><td>Sets or gets the value of the element. </td></tr>
      <tr><td>ValueMember</td><td>string</td><td>&quot;&quot;</td><td>Determines the value member of an item. Stored as value in the item object. Similar to groupMember, <strong>valueMember</strong> is especially usefull when using data from a JSON file as a dataSource for the ListBox and there's a specific property that should be used for the value the items.</td></tr>
      <tr><td>VerticalScrollBarVisibility</td><td>VerticalScrollBarVisibility</td><td>VerticalScrollBarVisibility.Auto</td><td>Determines the visibility of the vertical scroll bar that's inside the drop down.</td></tr>
  </table>
  <h2 id="TextBoxMethods"><a id="TextBox_methods" href="javascript: void(0)" class="anchor"><strong>TextBox</strong> Methods</a></h2>
  <table class="table">
      <tr><th>Name</th><th>Type</th><th>Arguments</th><th>Description</th></tr>
      <tr><td>Close</td><td>void</td><td>N/A</td><td>Closes the drop down. <strong>The drop down is used only when auto complete is enabled.</strong></td></tr>
      <tr><td>Open</td><td>void</td><td>N/A</td><td>Opens the drop down. <strong>The drop down is used only when auto complete is enabled.</strong></td></tr>
      <tr><td>Reset</td><td>void</td><td>N/A</td><td>The method is used to reset the input back to it's initial value.</td></tr>
  </table>
  <h2 id="TextBoxEvents"><a id="TextBox_events" href="javascript: void(0)" class="anchor"><strong>TextBox</strong> Events</a></h2>
  <table class="table">
      <tr><th>Name</th><th>Type</th><th>Description</th><th>Event Detail</th></tr>
      <tr><td>OnChange</td><td>EventCallback&lt;Event&gt;</td><td>This event is triggered when the value of the Text Box is changed.</td><td>dynamic oldValue, dynamic value, dynamic type</td></tr>
      <tr><td>Changed</td><td>event TextBoxChangedEventHandler</td><td>This event is triggered when the value of the Text Box is changed.</td><td>TextBoxChangedEventArgs</td></tr>
    </table>
</div>
